{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "MovieHub API",
    "description": "API for managing movies and users"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/movies": {
      "get": {
        "summary": "Get all movies",
        "responses": {
          "200": {
            "description": "A list of movies",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Movie"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new movie",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie created successfully",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "summary": "Get a movie by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie details",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "404": {
            "description": "Movie not found"
          }
        }
      },
      "put": {
        "summary": "Update a movie",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movie updated successfully",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "404": {
            "description": "Movie not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a movie",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie deleted successfully"
          },
          "404": {
            "description": "Movie not found"
          }
        }
      }
    },
    "/users/register": {
  "post": {
    "summary": "Register a new user",
    "parameters": [
      {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "The username of the user",
              "example": "testuser"
            },
            "email": {
              "type": "string",
              "description": "The email of the user",
              "example": "testuser@example.com"
            },
            "password": {
              "type": "string",
              "description": "The password of the user",
              "example": "password123"
            },
            "isdirector": {
              "type": "boolean",
              "description": "Indicates if the user is a director",
              "example": false
            }
          },
          "required": ["username", "email", "password"]
        }
      }
    ],
    "responses": {
      "201": {
        "description": "User registered successfully",
        "schema": {
          "$ref": "#/definitions/User"
        }
      },
      "400": {
        "description": "Invalid input or email already in use"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},

    "/users": {
      "get": {
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "A list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/update-director-status": {
      "put": {
        "summary": "Update the director status of the authenticated user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for user authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isDirector": {
                  "type": "boolean",
                  "description": "New director status",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Director status updated successfully"
          },
          "400": {
            "description": "Invalid input or missing data"
          },
          "403": {
            "description": "User not authenticated"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Movie": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "series_title": {
          "type": "string"
        },
        "released_year": {
          "type": "integer"
        },
        "certificate": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "imdb_rating": {
          "type": "number"
        },
        "overview": {
          "type": "string"
        },
        "meta_score": {
          "type": "integer"
        },
        "director": {
          "type": "string"
        },
        "star1": {
          "type": "string"
        },
        "star2": {
          "type": "string"
        },
        "star3": {
          "type": "string"
        },
        "star4": {
          "type": "string"
        },
        "no_of_votes": {
          "type": "integer"
        },
        "gross": {
          "type": "integer"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isdirector": {
          "type": "boolean",
          "description": "Indicates if the user is a director",
          "example": false
        }
      }
    }
  }
}